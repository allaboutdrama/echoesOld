<h1>Create a new sound</h1>

<%= form_for @sound do |f| %>

<% if @sound.errors.any? %>

<div class="error_messages">
  <h3>Form is invalid</h3>
  <ul>
    <% for message in @sound.errors.full_messages %>
    <li><%= message %></li>
    <% end %>
  </ul>
</div>

<% end %>


<div class="form_field">
  <%= f.label :name %>
  <%= f.text_field :name %>
</div>

<div class="form_field">
  <%= f.label :sound_url %>
  <%= f.text_field :sound_url %>
</div>

<div class="form_field">
  <%= f.label :latitude %>
  <%= f.text_field :latitude %>
</div>

<div class="form_field">
  <%= f.label :longitude%>
  <%= f.text_field :longitude %>
</div>

<div class="form_field">
  <%= f.label :description%>
  <%= f.text_field :description %>
</div>



<div class="form_actions"><%= f.submit %></div>
<% end %>

<%= link_to 'Back to Sounds', sounds_path %>

<br>
<br>

<audio id="myAudio" controls></audio>
<video id="myVideo" src=""></video>


<form action="javascript:;" method="post">
  <button id="captureButton">Capture</button>
  <button id="stopButton">Stop</button>
</form>
</div>



<script>
// var request = new XMLHttpRequest();
// request.open('GET', 'https://s3-us-west-2.amazonaws.com/allaboutdrama/echoes/sounds/the-sounds-of-chinatown-toronto.mp4', true);
// request.responseType = 'arraybuffer';

// // Decode asynchronously
// request.onload = function() {
//   context.decodeAudioData(request.response, function(theBuffer) {
//     buffer = theBuffer;
//   }, onError);
// }
// request.send();


// function playSound(buffer) {
//   var source = context.createBufferSource();
//   source.buffer = buffer;
//   source.connect(context.destination);
//   source.start(0);
// }

navigator.getUserMedia  = navigator.getUserMedia ||
navigator.webkitGetUserMedia ||
navigator.mozGetUserMedia ||
navigator.msGetUserMedia;

var success = function(stream){ 
 var audio = document.getElementById('myAudio');
 audio.src = URL.createObjectURL(stream);
 
 audio.play();
 
}
var error = function(err){
 console.log(err)
}

function getLiveInput(){
 navigator.getUserMedia({audio: true}, success, error);
}

getLiveInput();




</script>


